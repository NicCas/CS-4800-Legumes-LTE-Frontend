{"version":3,"sources":["handbasket/HandbasketTable.js"],"names":["axios","defaults","withCredentials","HandbasketTable","state","handbasket","total","remove","get","then","res","data","running_total","item","parseFloat","Price","$numberDecimal","Quantity","setState","catch","error","console","log","id","method","Item_ID","to_remove","new_handbasket","push","new_total","class","this","map","src","Image_URL","width","height","Item_Name","Store_Name","className","onClick","removeItem","toFixed","React","Component"],"mappings":"qOAGAA,IAAMC,SAASC,iBAAkB,E,IAEZC,E,4MACjBC,MAAQ,CACJC,WAAY,GACZC,MAAO,EACPC,OAAQ,M,uDAGV,WAAqB,IAAD,OAClBP,IACGQ,IADH,sCAEGC,MAAK,SAACC,GACL,IADa,EACPC,EAAOD,EAAIC,KACbC,EAAgB,EAFP,cAGID,GAHJ,IAGb,2BAAuB,CAAC,IAAfE,EAAc,QACrBD,GACEE,WAAWD,EAAKE,MAAMC,gBAAkBH,EAAKI,UALpC,8BAOb,EAAKC,SAAS,CAAEb,WAAYM,EAAML,MAAOM,OAE1CO,OAAM,SAAUC,GACfC,QAAQC,IAAIF,Q,wBAIlB,SAAWG,GAAI,IAAD,OACZvB,IAAM,4CACN,CACEwB,OAAQ,OACRb,KAAM,CACJc,QAASF,KAGVd,MAAK,SAACC,GACLW,QAAQC,IAAIZ,EAAIC,MAChB,IACIe,EAHS,EAETC,EAAiB,GAFR,cAIG,EAAKvB,MAAMC,YAJd,IAIb,IAAI,EAAJ,qBAAsC,CAAC,IAA/BQ,EAA8B,QACjCA,EAAKY,UAAYF,EAClBI,EAAeC,KAAKf,GAEpBa,EAAYb,GARH,8BAUb,IAAIgB,EAAY,EAAKzB,MAAME,MAASoB,EAAUX,MAAMC,eAAiBU,EAAUT,SAC/E,EAAKC,SAAS,CAAEb,WAAYsB,EAAgBrB,MAAOuB,S,oBAI3D,WAAS,IAAD,OACJ,OACI,sBAAKC,MAAM,sBAAX,UACA,wBAAOP,GAAG,mBAAV,UACI,gCACA,+BACI,oBAAIA,GAAG,iBAAP,qBACA,oBAAIA,GAAG,eAAP,mBACA,oBAAIA,GAAG,eAAP,mBACA,oBAAIA,GAAG,kBAAP,sBACA,oBAAIA,GAAG,kBAAP,sBACA,oBAAIA,GAAG,gBAGVQ,KAAK3B,MAAMC,WAAW2B,KAAI,SAACnB,GAAD,OAC3B,+BACI,+BACA,qBAAKiB,MAAM,gBAAX,SACI,qBACAG,IAAKpB,EAAKqB,UACVC,MAAM,QACNC,OAAO,YAGX,qBAAKN,MAAM,eAAX,SAA2BjB,EAAKwB,eAEhC,6BAAKxB,EAAKyB,aACV,mCAAMzB,EAAKE,MAAMC,kBACjB,6BAAKH,EAAKI,WACV,mCAAMJ,EAAKE,MAAMC,eAAiBH,EAAKI,YACvC,6BACE,wBAAQsB,UAAU,MAAMC,QAAS,kBAAI,EAAKC,WAAW5B,EAAKY,UAA1D,+CAKV,qBAAKF,GAAG,QAAR,SACI,yCAAYQ,KAAK3B,MAAME,MAAMoC,QAAQ,e,GApFRC,IAAMC","file":"static/js/21.707bd25c.chunk.js","sourcesContent":["import React from 'react'\nimport axios from 'axios'\n\naxios.defaults.withCredentials = true;\n\nexport default class HandbasketTable extends React.Component{\n    state = {\n        handbasket: [],\n        total: 0,\n        remove: null\n      };\n    \n      componentDidMount() {\n        axios\n          .get(`https://chickpeaapi.glitch.me/cart`)\n          .then((res) => {\n            const data = res.data;\n            var running_total = 0;\n            for (var item of data) {\n              running_total +=\n                parseFloat(item.Price.$numberDecimal) * item.Quantity;\n            }\n            this.setState({ handbasket: data, total: running_total });\n          })\n          .catch(function (error) {\n            console.log(error);\n          });\n      }\n\n      removeItem(id){\n        axios(`https://chickpeaapi.glitch.me/cart/remove`, \n        {\n          method: \"post\",\n          data: {\n            Item_ID: id\n          }\n        })\n          .then((res) => {\n            console.log(res.data);\n            var new_handbasket = [];\n            var to_remove;\n            for(var item of this.state.handbasket){\n              if(item.Item_ID !== id)\n                new_handbasket.push(item);\n              else\n                to_remove = item;\n            }\n            var new_total = this.state.total - (to_remove.Price.$numberDecimal * to_remove.Quantity);\n            this.setState({ handbasket: new_handbasket, total: new_total });\n          })\n      }\n\n    render(){\n        return(\n            <div class=\"handbasket-contents\">\n            <table id=\"handbasket-table\">\n                <thead>\n                <tr>\n                    <th id=\"product-column\">Product</th>\n                    <th id=\"store-column\">Store</th>\n                    <th id=\"price-column\">Price</th>\n                    <th id=\"quantity-column\">Quantity</th>\n                    <th id=\"subtotal-column\">Subtotal</th>\n                    <th id=\"remove\"></th>\n                </tr>\n                </thead>\n                {this.state.handbasket.map((item) => (\n                <tr>\n                    <td>\n                    <div class=\"product-image\">\n                        <img\n                        src={item.Image_URL}\n                        width=\"150px\"\n                        height=\"150px\"\n                        ></img>\n                    </div>\n                    <div class=\"product-name\">{item.Item_Name}</div>\n                    </td>\n                    <td>{item.Store_Name}</td>\n                    <td>${item.Price.$numberDecimal}</td>\n                    <td>{item.Quantity}</td>\n                    <td>${item.Price.$numberDecimal * item.Quantity}</td>\n                    <td>\n                      <button className=\"btn\" onClick={()=>this.removeItem(item.Item_ID)}>Remove from Handbasket</button>\n                    </td>\n                </tr>\n                ))}\n            </table>\n            <div id=\"total\">\n                <b>Total: ${this.state.total.toFixed(2)}</b>\n            </div>\n            </div>\n        );\n    }\n}"],"sourceRoot":""}