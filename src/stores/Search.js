import React from "react";
import "./Search.css";
import Card from "react-bootstrap/Card";
import item from "../assets/item_placeholder.png";
import search from "../assets/search.png";
import axios from "axios";
axios.defaults.withCredentials = true;

function ItemCards(props) {
  return (
    <Card style={{ width: "10rem" }}>
      <Card.Img
        variant="top"
        id="item-icon"
        src={props.img_url}
        alt="Placeholder Item Picture"
      />

      <Card.Body>
        <Card.Title>{props.name}</Card.Title>
        <Card.Text>${props.price}</Card.Text>
        <button class="btn">Buy</button>
      </Card.Body>

      <Card.Footer>
        <small className="text-muted">Stock: {props.stock}</small>
      </Card.Footer>
    </Card>
  );
}

export default class Search extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      items: [],
      store: {},
      userSearch: "",
      redirect: null,
      error: false,
    };

    this.componentDidMount = this.componentDidMount.bind(this);
    this.componentDidUpdate = this.componentDidUpdate.bind(this);
  }

  // Another potential method of sending info to middle ware Based on StorePage
  componentDidMount() {
    let currentComponent = this;
    this.setState({userSearch: this.props.match.params.search_query});
    // axios request will go in here
    
    axios("https://chickpeaapi.glitch.me/search/query", {
      method: "post",
      data: {
        searchInput: currentComponent.props.match.params.search_query // In theory this gets the search query from the URL generated by clicking search, currently it breaks. See StorePage for working code refrence
      },
    }).then(function (response) {
      const item_list = response.data.data;
      currentComponent.setState({
        items: item_list,
        //store: store_data
      });
    });
  }

  componentDidUpdate(prevProps){
    let currentComponent = this;
    if (prevProps !== this.props) {
      console.log("props updated");
      this.setState({userSearch: this.props.match.params.search_query});
      axios("https://chickpeaapi.glitch.me/search/query", {
        method: "post",
        data: {
          searchInput: currentComponent.props.match.params.search_query
        },
      }).then(function (response) {
        const item_list = response.data.data;
        console.log(item_list);
        currentComponent.setState({
          items: item_list,
          //store: store_data
        });
      });
    }
  }

  addToCart(id, quantity) {
    axios("https://chickpeaapi.glitch.me/cart/add", {
      withCredentials: true,
      method: "post",
      data: {
        Item_ID: id,
        Quantity: quantity,
      },
    }).then((res) => {
      console.log(res.data);
      alert(`Added to cart!`);
    });
  }

  render() {
    return (
      <div id="search-page">
        <div id="search-header">
          <img id="search-img" src={search}></img>
          <h2 id="search-title">Search Results For: {this.state.userSearch}</h2>
          <span id="search-cont"></span>
        </div>
        <div id="search-items-list">
          <a class="anchor-search" id="store1"></a>
          <div class="search-grid-outer">
            {/*<h3>Store</h3>*/}
            <div class="search-grid-inner">
              {this.state.items.map((item) => (
              <div class="items-grid-search">
              <Card style={{ width: "10rem" }}>
                <Card.Img
                  variant="top"
                  id="item-icon"
                  src={item.Image_URL}
                  alt="Placeholder Item Picture"
                />

                <Card.Body>
                  <Card.Title>{item.Item_Name}</Card.Title>
                  <Card.Text>${item.Price}</Card.Text>
                  <button 
                  class="btn"
                  onClick={() => this.addToCart(item.Item_ID, 1)}
                  >
                    Add to Cart
                  </button>
                </Card.Body>

                <Card.Footer>
                  <small className="text-muted">Stock: {item.Stock}</small>
                </Card.Footer>
              </Card>
              </div>
              ))}
            </div>
          </div>
        </div>
        <div id="extra-space-search"></div>
      </div>
    );
  }
}
